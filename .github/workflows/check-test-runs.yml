name: Check Test Runs

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  check_tests_integration_org:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Download artifact
      id: download-artifact
      uses: dawidd6/action-download-artifact@v2
      with:
        workflow: schedule-test-runs.yml
        workflow_conclusion: success
        name: integration_test_run_id
        name_is_regexp: true

    - name: print contents
      run: |
        cd integration_test_run_id 
        INTEGRATION_TEST_RUN_ID=$(cat integration_test_run_id.txt)
        echo "INTEGRATION_TEST_RUN_ID=$INTEGRATION_TEST_RUN_ID" >> $GITHUB_ENV
    
    - name: "Install Salesforce CLI"
      run: |
        wget https://developer.salesforce.com/media/salesforce-cli/sfdx/channels/stable/sfdx-linux-x64.tar.xz
        mkdir ~/sfdx
        tar xJf sfdx-linux-x64.tar.xz -C ~/sfdx --strip-components 1
        echo "$HOME/sfdx/bin" >> $GITHUB_PATH
        ~/sfdx/bin/sfdx version
    
    - name: "Populate auth file with SFDX_URL secret"
      shell: bash
      run: |
        echo ${{ secrets.SFDX_INTEGRATION_URL}} > ./SFDX_INTEGRATION_URL.txt

    # Authenticate to org using the URL stored in the text file
    - name: "Authenticate to  Org"
      run: sfdx auth:sfdxurl:store -f ./SFDX_INTEGRATION_URL.txt -s -a integration

    - name: Set INTEGRATION_TEST_RESULT
      id: set_integration_test_result
      run: |
        sf apex get test -i ${{ env.INTEGRATION_TEST_RUN_ID }} || true
        if [ $? -eq 0 ]; then
          echo "::set-output name=INTEGRATION_TEST_RESULT::FAIL"
        else
          echo "::set-output name=INTEGRATION_TEST_RESULT::PASS"
        fi
        
  check_tests_UAT_org:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Download artifact
      id: download-artifact
      uses: dawidd6/action-download-artifact@v2
      with:
        workflow: schedule-test-runs.yml
        workflow_conclusion: success
        name: uat_test_run_id
        name_is_regexp: true

    - name: print contents
      run: |
        cd uat_test_run_id 
        UAT_TEST_RUN_ID=$(cat uat_test_run_id.txt)
        echo "UAT_TEST_RUN_ID=$UAT_TEST_RUN_ID" >> $GITHUB_ENV
    
    - name: "Install Salesforce CLI"
      run: |
        wget https://developer.salesforce.com/media/salesforce-cli/sfdx/channels/stable/sfdx-linux-x64.tar.xz
        mkdir ~/sfdx
        tar xJf sfdx-linux-x64.tar.xz -C ~/sfdx --strip-components 1
        echo "$HOME/sfdx/bin" >> $GITHUB_PATH
        ~/sfdx/bin/sfdx version
    
    - name: "Populate auth file with SFDX_URL secret"
      shell: bash
      run: |
        echo ${{ secrets.SFDX_UAT_URL}} > ./SFDX_UAT_URL.txt

    # Authenticate to org using the URL stored in the text file
    - name: "Authenticate to  Org"
      run: sfdx auth:sfdxurl:store -f ./SFDX_UAT_URL.txt -s -a uat

    - name: Set UAT_TEST_RESULT
      id: set_uat_test_result
      run: |
        sf apex get test -i ${{ env.UAT_TEST_RUN_ID }} || true
        if [ $? -eq 0 ]; then
          echo "::set-output name=UAT_TEST_RESULT::FAIL"
        else
          echo "::set-output name=UAT_TEST_RESULT::PASS"
        fi


  send_slack_message:
    runs-on: ubuntu-latest
    needs: [check_tests_integration_org,check_tests_UAT_org]
    steps:
      - name: Debug variable
        run: |
          echo "UAT_TEST_RESULT is ${{ needs.check_tests_UAT_org.outputs.UAT_TEST_RESULT }}"

      - name: Post to a Slack channel
        id: slack
        uses: slackapi/slack-github-action@v1.24.0
        with:
          # Slack channel id, channel name, or user id to post message.
          # See also: https://api.slack.com/methods/chat.postMessage#channels
          # You can pass in multiple channels to post to by providing a comma-delimited list of channel IDs.
          channel-id: 'C062G1V3KKK'
          # For posting a simple plain text message
          payload: |
            {
              "text": "Test Runs Finished",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "Integration org test run result: ${{ steps.set_integration_test_result.outputs.INTEGRATION_TEST_RESULT }}"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "UAT org test run result: ${{ steps.set_uat_test_result.outputs.UAT_TEST_RESULT }}"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "See results here ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                  }
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      

        
   
    
    

        